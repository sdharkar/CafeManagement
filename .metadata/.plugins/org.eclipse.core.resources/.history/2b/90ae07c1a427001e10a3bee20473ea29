package com.manu.management.controller;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.manu.management.model.ManuItem;
import com.manu.management.repository.ManuItemRepository;

@RestController
@RequestMapping("/api/manu/items")
public class ManuController {
	
	@Autowired
	private ManuItemRepository manuItemRepository;
	
	//private static final Logger LOGGER = LoggerFactory.getLogger(ManuController.class);

	
	
		@PostMapping
	    public ManuItem createManuItem(@RequestBody ManuItem manuItem) {
			return manuItemRepository.save(manuItem);
			// try {
		            // Logic to create a new menu item...
				// 	LOGGER.info("Created a new menu item: {}", manuItem);
				 //	return manuItemRepository.save(manuItem);
		        //} catch (Exception e) {
		          //  LOGGER.error("Failed to create menu item: {}", e.getMessage());
		            //throw new RuntimeException("Failed to create menu item", e);
		        //}
	    }

	    @GetMapping
	    public List<ManuItem> getAllManuItems() {
	        return manuItemRepository.findAll();
	    }

	    @GetMapping("/{id}")
	    public ManuItem getManuItemById(@PathVariable String id) {
	        return manuItemRepository.findById(id).orElse(null);
	    }

	    @PutMapping("/{id}")
	    public ManuItem updateManuItem(@PathVariable String id, @RequestBody ManuItem manuItem) {
	        manuItem.setId(id);
	        return manuItemRepository.save(manuItem);
	    }

	    @DeleteMapping("/{id}")
	    public void deleteMenuItem(@PathVariable String id) {
	        manuItemRepository.deleteById(id);
	    }

}
